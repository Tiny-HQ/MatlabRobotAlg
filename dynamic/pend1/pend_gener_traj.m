
% -------------------------------------------------------------------------
% Author: [Tiny][YuZhi]                      
% Contact: [tiny_h@163.com] 
% GitHub: [https://github.com/Tiny-HQ] 
% Zhihu:[https://www.zhihu.com/people/tiny_hq]
% Copyright (c) [2024] [Tiny][YuZhi]. All rights reserved.
% 
% This code is for academic, educational, and non-commercial use only.
% Unauthorized use, reproduction, or distribution is prohibited.
% 
% Disclaimer: This code is provided "as is" without any warranties. Use at your own risk.
% The author is not responsible for any robot or machine safety-related issues arising from the use of this code.
% -------------------------------------------------------------------------



clear;
clc;


global Ts Pi g;
Ts = 0.01;
Pi = 3.1415926;
g = -9.81;

total_time = 20.0;
acc = 1.0;

total_no = total_time/Ts+1;


time_sequ = 0:Ts:total_time;
angle_acc = linspace(acc,acc,total_no);
angle_vel = acc*time_sequ;
angle = time_sequ.^2*acc*0.5;

pend_angle_acc = [time_sequ',angle_acc'];
pend_angle_vel = [time_sequ',angle_vel'];
pend_angle = [time_sequ',angle'];


tao = pend_cal_tao(angle_acc,angle_vel,angle);


%����������������֮����ʵ���˶����ɵ��������߶Աȣ�Comparison of the generated moment curve after the calculation with the moment curve generated by the actual motion:
%pend_acc.slx
plot(tao);


%��֤��������õ���tao��ʵ�ʵķ��������tao_real�Ƿ���ͬ;��ֵ�����e-14����;Verify whether the calculated TAO is the same as the actual simulated tao_real; The numerical error is in the order of E-14;
figure;
load('tao_real.mat');
plot(tao'-tao_real.Data);





